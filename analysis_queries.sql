
-- 1. Find the total sales revenue generated
SELECT ROUND(SUM(oi.quantity * oi.list_price), 2) AS total_revenue
FROM order_items oi;

-- 2. Find the Top 10 best-selling products (by quantity sold)
SELECT p.product_name, SUM(oi.quantity) AS total_sold
FROM order_items oi
JOIN products p ON oi.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_sold DESC
LIMIT 10;

-- 3. Show yearly revenue trend (revenue per year)
SELECT EXTRACT(YEAR FROM o.order_date) AS year,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id
GROUP BY year
ORDER BY year;

-- 4. Show which stores generated the highest revenue
SELECT s.store_name,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM stores s
JOIN orders o ON s.store_id = o.store_id
JOIN order_items oi ON o.order_id = oi.order_id
GROUP BY s.store_name
ORDER BY revenue DESC;

-- 5. Find the Top 5 best-performing sales staff by revenue
SELECT st.first_name || ' ' || st.last_name AS staff_name,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM staffs st
JOIN orders o ON st.staff_id = o.staff_id
JOIN order_items oi ON o.order_id = oi.order_id
GROUP BY staff_name
ORDER BY revenue DESC
LIMIT 5;

-- 6. Find the most loyal customers (customers with the highest number of orders)
SELECT c.first_name || ' ' || c.last_name AS customer_name,
       COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY customer_name
ORDER BY total_orders DESC
LIMIT 5;

-- 7. Calculate the Average Order Value (AOV)
SELECT ROUND(AVG(order_total), 2) AS avg_order_value
FROM (
    SELECT o.order_id,
           SUM(oi.quantity * oi.list_price) AS order_total
    FROM orders o
    JOIN order_items oi ON o.order_id = oi.order_id
    GROUP BY o.order_id
) sub;

-- 8. Show revenue generated by each product category
SELECT c.category_name,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM categories c
JOIN products p ON c.category_id = p.category_id
JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY c.category_name
ORDER BY revenue DESC;

-- 9. Show monthly sales trend (revenue per month in each year)
SELECT EXTRACT(YEAR FROM o.order_date) AS year,
       EXTRACT(MONTH FROM o.order_date) AS month,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM orders o
JOIN order_items oi ON o.order_id = oi.order_id
GROUP BY year, month
ORDER BY year, month;

-- 10. Show revenue generated by each brand
SELECT b.brand_name,
       ROUND(SUM(oi.quantity * oi.list_price),2) AS revenue
FROM brands b
JOIN products p ON b.brand_id = p.brand_id
JOIN order_items oi ON p.product_id = oi.product_id
GROUP BY b.brand_name
ORDER BY revenue DESC;
